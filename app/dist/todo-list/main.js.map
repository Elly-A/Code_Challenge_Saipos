{"version":3,"sources":["./src/app/ext_modules/extmodules.ts","./src/app/components/todo-list/single-todo/single-todo.component.ts","./src/app/components/todo-list/single-todo/single-todo.component.html","./src/app/util/validators/Validator.ts","./src/app/components/todo-list/add-todo/add-todo.component.ts","./src/app/components/todo-list/add-todo/add-todo.component.html","./src/app/util/convertArrayToObject.ts","./src/environments/environment.ts","./src/app/util/animations/inOutAnimation.ts","./src/app/services/supervisor-check.service.ts","./src/app/util/sortTodos.ts","./src/app/components/todo-list/todo-list.component.ts","./src/app/components/todo-list/todo-list.component.html","./src/app/components/todo-list/generate-todos/generate-todos.component.ts","./src/app/components/todo-list/generate-todos/generate-todos.component.html","./src/app/components/dark-mode/dark-mode.component.ts","./src/app/components/dark-mode/dark-mode.component.html","./src/app/stores/todo-list/todo-list.store.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/todo-list/dialog/validate-supervisor-password/validate-supervisor-password.component.ts","./src/app/components/todo-list/dialog/validate-supervisor-password/validate-supervisor-password.component.html","./src/app/stores/todo-list/todo-list.action.ts","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/stores/store.ts","./src/app/services/todo.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\nexport const matModules = [\r\n  MatCardModule,\r\n  MatButtonModule,\r\n  MatToolbarModule,\r\n  MatIconModule,\r\n  MatSlideToggleModule,\r\n  MatRadioModule,\r\n  MatListModule,\r\n  MatTooltipModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatDialogModule,\r\n];\r\n","import { NgRedux } from '@angular-redux/store';\nimport { animate, state, style, transition, trigger } from '@angular/animations';\nimport { AfterViewInit, Component, Input, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\nimport { Todo } from 'src/app/interfaces/todo.interface';\nimport { TodoService } from 'src/app/services/todo.service';\nimport { IAppState } from 'src/app/stores/store';\nimport { inOutAnimation } from 'src/app/util/animations/inOutAnimation';\nimport { tassign } from 'tassign';\nimport { ValidateSupervisorPasswordComponent } from '../dialog/validate-supervisor-password/validate-supervisor-password.component';\n\n@Component({\n  selector: 'single-todo',\n  templateUrl: './single-todo.component.html',\n  styleUrls: ['./single-todo.component.scss'],\n  animations: [\n    inOutAnimation,\n  ]\n})\nexport class SingleTodoComponent implements OnInit {\n  private subscriptions: Subscription[] = [];\n\n  @Input('todo') originalTodo: Todo;\n  todo: Todo;\n\n  private currentContent: string;\n\n  editMode = false;\n\n  constructor(\n    private dialog: MatDialog,\n    private service: TodoService\n  ) { }\n\n  ngOnInit(): void {\n    this.todo = tassign(this.todo, {\n      ...this.originalTodo\n    });\n  }\n\n  completeTodo(): void {\n    if (this.editMode) {\n      return;\n    }\n\n    if (!this.todo.isCompleted) {\n      this.toggleTodo();\n      this.updateTodo();\n    }\n  }\n\n  enableEditMode(): void {\n    if (this.todo.timesEdited > 1) {\n\n    } else {\n      const pwCheckSubscription = this.openValidateSupervisorPasswordDialog(\n        { option: 'editável', times: this.todo.timesEdited }\n      ).afterClosed()\n        .subscribe((isValid: boolean) => {\n          if (isValid) {\n            this.currentContent = this.todo.content;\n            this.editMode = true;\n          }\n        });\n\n      this.subscriptions.push(pwCheckSubscription);\n    }\n  }\n\n  returnTodo(): void {\n    if (this.todo.timesCompleted > 2) {\n\n    } else {\n      this.openValidateSupervisorPasswordDialog(\n        { option: 'pendente', times: this.todo.timesCompleted }\n      ).afterClosed()\n        .subscribe((isValid: boolean) => {\n          if (isValid) {\n            this.toggleTodo();\n            this.updateTodo();\n          }\n        });\n    }\n  }\n\n  updateCurrentContent(\n    content: string\n  ): void {\n    this.currentContent = content;\n  }\n\n  saveChanges(): void {\n    this.todo.content = this.currentContent;\n    this.incrementTimesEdited();\n    this.updateTodo();\n    this.editMode = false;\n  }\n\n  discardChanges(): void {\n    this.currentContent = null;\n    this.editMode = false;\n  }\n\n  pinTodo(): void {\n    this.todo.isPinned = !this.todo.isPinned;\n    this.updateTodo();\n  }\n\n  todoIsAvailable(): boolean {\n    return !this.todo.isCompleted && !this.editMode;\n  }\n\n  updateTodo(): void {\n    const updateSubscription = this.service.update(this.todo)\n      .subscribe();\n\n    this.subscriptions.push(updateSubscription);\n  }\n\n  private toggleTodo(): void {\n    if (!this.todo.isCompleted) {\n      this.incrementTimesCompleted();\n    }\n    this.toggleIsCompleted();\n  }\n\n  private toggleIsCompleted(): void {\n    this.todo.isCompleted = !this.todo.isCompleted;\n  }\n\n  private openValidateSupervisorPasswordDialog(\n    data: { option: string, times: number },\n  ): MatDialogRef<ValidateSupervisorPasswordComponent> {\n\n    return this.dialog.open(ValidateSupervisorPasswordComponent, {\n      height: '300px',\n      width: '500px',\n      data\n    });\n\n  }\n\n  private incrementTimesCompleted(): void {\n    this.todo.timesCompleted++;\n  }\n\n  private incrementTimesEdited(): void {\n    this.todo.timesEdited++;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(subscription => {\n      subscription.unsubscribe();\n    })\n  }\n}\n","<section [ngClass]=\"{ 'edit-mode' : editMode }\" class=\"single-todo\">\n  <mat-card>\n    <section class=\"todo\">\n      <section class=\"todo-content\">\n        <mat-radio-button @inOutAnimation *ngIf=\"todoIsAvailable()\" matTooltip=\"Marcar tarefa como completa\"\n          (click)=\"completeTodo()\">\n        </mat-radio-button>\n        <p *ngIf=\"!editMode\" [ngClass]=\"{ 'todo-complete' : todo.isCompleted }\">{{ todo.content }}</p>\n        <mat-form-field *ngIf=\"editMode\">\n          <input (change)=\"updateCurrentContent($event.target.value)\" matInput [value]=\"todo.content\">\n        </mat-form-field>\n      </section>\n      <section class=\"todo-actions\">\n        <button (click)=\"saveChanges()\" matTooltip=\"Salvar tarefa\" *ngIf=\"editMode\" mat-button>\n          <mat-icon>done</mat-icon>\n        </button>\n        <button (click)=\"discardChanges()\" matTooltip=\"Cancelar atualização\" *ngIf=\"editMode\" mat-button>\n          <mat-icon>clear</mat-icon>\n        </button>\n        <div [matTooltip]=\"!(todo.timesEdited > 1) ? 'Editar tarefa' : 'Você já atingiu o limite de alterações'\">\n          <button [disabled]=\"todo.timesEdited > 1\" (click)=\"enableEditMode()\" *ngIf=\"todoIsAvailable()\" mat-button>\n            <mat-icon>create</mat-icon>\n          </button>\n        </div>\n        <button [ngClass]=\"{ 'active' : todo.isPinned }\" class=\"pin-button\" (click)=\"pinTodo()\"\n          matTooltip=\"Fixar tarefa\" *ngIf=\"todoIsAvailable()\" mat-button>\n          <mat-icon [ngClass]=\"{ 'pinned' : todo.isPinned }\">push_pin</mat-icon>\n        </button>\n        <div\n          [matTooltip]=\"!(todo.timesCompleted > 2) ? 'Voltar tarefa para pendente (precisa de autorização)' : 'Você já atingiu o limite desta operação'\">\n          <button (click)=\"returnTodo()\" *ngIf=\"todo.isCompleted\" mat-button [disabled]=\"(todo.timesCompleted > 2)\">\n            <mat-icon>supervisor_account</mat-icon>\n          </button>\n        </div>\n      </section>\n    </section>\n    <section class=\"author\">\n      <small>{{ todo.createdByName }}<br><span>{{ todo.createdByEmail }}</span></small>\n    </section>\n  </mat-card>","import { HttpClient, HttpXhrBackend } from '@angular/common/http';\r\nimport { AbstractControl } from '@angular/forms';\r\nimport { from, Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport class CustomValidator {\r\n  private static mailboxAPIKey = '42bc40bb8180a89b8d799300c42ad141';\r\n  private static mailboxAPIUrl = 'https://apilayer.net/api/check';\r\n  private static http = new HttpClient(new HttpXhrBackend({ build: () => new XMLHttpRequest() }));\r\n\r\n  constructor() { }\r\n\r\n  static emailValidator(control: AbstractControl): Observable<{ [key: string]: any } | null> {\r\n    if (control.value.length > 4) {\r\n      return CustomValidator.http.get(CustomValidator.mailboxAPIUrl, {\r\n        params: {\r\n          access_key: CustomValidator.mailboxAPIKey,\r\n          email: control.value\r\n        }\r\n      }).pipe(\r\n        map((res: any) =>\r\n          res.mx_found && res.format_valid ?\r\n            null :\r\n            { isInvalid: true, apiResponse: res }\r\n        )\r\n      );\r\n    } else {\r\n      return of(null);\r\n    }\r\n\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { TodoService } from 'src/app/services/todo.service';\nimport { inOutAnimation } from 'src/app/util/animations/inOutAnimation';\nimport { CustomValidator } from 'src/app/util/validators/Validator';\n\n@Component({\n  selector: 'add-todo',\n  templateUrl: './add-todo.component.html',\n  styleUrls: ['./add-todo.component.scss'],\n  animations: [\n    inOutAnimation\n  ]\n})\nexport class AddTodoComponent implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  openFormDescription = 'Adicionar nova tarefa';\n  closeFormDescription = 'Cancelar';\n  formOpen = false;\n\n  form = this.fb.group({\n    content: ['', [\n      Validators.required,\n    ]],\n    createdByName: ['', [\n      Validators.required\n    ]],\n    createdByEmail: ['', [Validators.required],\n      [CustomValidator.emailValidator]\n    ],\n  });\n\n  constructor(\n    private service: TodoService,\n    private fb: FormBuilder,\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  addTodo(): void {\n    const addSubscription = this.service.add({\n      content: this.form.get('content').value,\n      createdByEmail: this.form.get('createdByEmail').value,\n      createdByName: this.form.get('createdByName').value,\n      isCompleted: false,\n      timesCompleted: 0,\n      timesEdited: 0,\n      isPinned: false\n    }).subscribe();\n\n    this.subscriptions.push(addSubscription);\n\n    this.form.reset();\n    this.closeForm();\n  }\n\n  openForm(): void {\n    this.formOpen = true;\n  }\n\n  closeForm(): void {\n    this.formOpen = false;\n  }\n\n  correctCreatedByEmailField(newField: string): void {\n    this.form.controls.createdByEmail.setValue(newField);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(subscription => {\n      subscription.unsubscribe();\n    });\n  }\n\n  log(msg) {\n    console.log(msg)\n  }\n}\n","<section @inOutAnimation class=\"add-todo-buttons\">\n  <generate-todos></generate-todos>\n  <button *ngIf=\"!formOpen\" (click)=\"openForm()\" [matTooltip]=\"openFormDescription\"\n    [attr.aria-label]=\"'Clique para ' + openFormDescription.toLowerCase()\" mat-button>\n    <mat-icon>add</mat-icon>\n  </button>\n  <button *ngIf=\"formOpen\" (click)=\"closeForm()\" [matTooltip]=\"closeFormDescription\"\n    [attr.aria-label]=\"'Clique para ' + closeFormDescription.toLowerCase()\" mat-button>\n    <mat-icon>close</mat-icon>\n  </button>\n</section>\n\n<section @inOutAnimation class=\"add-todo-form\" *ngIf=\"formOpen\">\n  <mat-card>\n    <form [formGroup]=\"form\" (ngSubmit)=\"addTodo()\">\n      <mat-form-field>\n        <mat-label>Conteúdo da tarefa</mat-label>\n        <input id=\"todo-content\" matInput formControlName=\"content\">\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>Responsável</mat-label>\n        <input id=\"name\" matInput formControlName=\"createdByName\">\n      </mat-form-field>\n      <mat-form-field>\n        <mat-label>E-mail do responsável</mat-label>\n        <input type=\" email\" id=\"email\" matInput formControlName=\"createdByEmail\">\n      </mat-form-field>\n      <mat-error *ngIf=\"form.controls.createdByEmail.errors as errors\" class=\"did-you-mean\">\n        <small *ngIf=\"errors.isInvalid\">\n          <span (click)=\"log(errors.apiResponse)\" *ngIf=\"errors.apiResponse.did_you_mean\">\n            Você quis dizer: <a (click)=\"correctCreatedByEmailField(errors.apiResponse.did_you_mean)\" role=\"button\"\n              class=\"did-you-mean-a\">{{\n              errors.apiResponse.did_you_mean }}</a>?\n          </span>\n        </small>\n      </mat-error>\n      <button color=\"primary\" mat-button type=\"submit\" [disabled]=\"!form.valid\">Adicionar</button>\n    </form>\n  </mat-card>\n</section>","import { tassign } from 'tassign';\r\n\r\nexport function convertArrayToObject<T>(array: T[]): { [id: string]: T } {\r\n  let object = {};\r\n\r\n  array.forEach((t: any) => {\r\n    object = tassign(object, {\r\n      ...object,\r\n      [t.id]: t\r\n    });\r\n  });\r\n\r\n  return object;\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { trigger, transition, style, animate } from '@angular/animations';\r\n\r\nexport const inOutAnimation = trigger(\r\n  'inOutAnimation',\r\n  [\r\n    transition(\r\n      ':enter',\r\n      [\r\n        style({ opacity: 0, width: '0' }),\r\n        animate('.3s cubic-bezier(0.075, 0.82, 0.165, 1)',\r\n          style({ opacity: 1, width: '*' }))\r\n      ]\r\n    ),\r\n    transition(\r\n      ':leave',\r\n      [\r\n        style({ opacity: 1, width: '*' }),\r\n        animate('.3s cubic-bezier(0.075, 0.82, 0.165, 1)',\r\n          style({ opacity: 0, width: '0' }))\r\n      ]\r\n    ),\r\n  ]\r\n);\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SupervisorCheckService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  validate(password: string): boolean {\n    // password in backend will be encrypted\n    return password === 'TrabalheNaSaipos';\n  }\n}\n","import { Todo } from '../interfaces/todo.interface';\r\nimport { IAppState } from '../stores/store';\r\n\r\nexport function sortTodos(todos: IAppState['todoState']['todos']): Todo[] {\r\n  return Object.values(todos).sort((todo1, todo2) => {\r\n    if (!todo1.isPinned && todo2.isPinned) {\r\n      return 1;\r\n    } else if (todo1.isPinned && !todo2.isPinned) {\r\n      return -1;\r\n    } else {\r\n      return parseInt(todo2.id, 10) - parseInt(todo1.id, 10);\r\n    }\r\n  });\r\n}\r\n","import { select } from '@angular-redux/store';\nimport { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Todo } from 'src/app/interfaces/todo.interface';\nimport { IAppState } from 'src/app/stores/store';\nimport { inOutAnimation } from 'src/app/util/animations/inOutAnimation';\nimport { sortTodos } from 'src/app/util/sortTodos';\n\n@Component({\n  selector: 'todo-list',\n  templateUrl: './todo-list.component.html',\n  styleUrls: ['./todo-list.component.scss'],\n  animations: [\n    inOutAnimation\n  ]\n})\nexport class TodoListComponent implements OnInit {\n  @select((s: IAppState) =>\n    sortTodos(s.todoState.todos)\n      .filter(todo => !todo.isCompleted)) $pendingTodos: Observable<Todo[]>;\n\n  @select((s: IAppState) =>\n    sortTodos(s.todoState.todos)\n      .filter(todo => todo.isCompleted)) $completedTodos: Observable<Todo[]>;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"container\">\n  <section class=\"todo-list-actions\">\n    <add-todo></add-todo>\n  </section>\n  <section class=\"pending-todos\">\n    <h2 *ngIf=\"($pendingTodos | async).length > 0\">Tarefas pendentes</h2>\n    <mat-list>\n      <mat-list-item *ngFor=\"let todo of $pendingTodos | async\">\n        <single-todo @inOutAnimation [todo]=\"todo\"></single-todo>\n      </mat-list-item>\n    </mat-list>\n  </section>\n  <section class=\"complete-todos\">\n    <h2 *ngIf=\"($completedTodos | async).length > 0\">Tarefas concluídas</h2>\n    <mat-list>\n      <mat-list-item *ngFor=\"let todo of $completedTodos | async\">\n        <single-todo @inOutAnimation [todo]=\"todo\"></single-todo>\n      </mat-list-item>\n    </mat-list>\n  </section>\n</section>","import { Component, OnInit } from '@angular/core';\nimport { TodoService } from 'src/app/services/todo.service';\n\n@Component({\n  selector: 'generate-todos',\n  templateUrl: './generate-todos.component.html',\n  styleUrls: ['./generate-todos.component.scss']\n})\nexport class GenerateTodosComponent implements OnInit {\n\n  constructor(\n    private service: TodoService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  getThreeRandom(): void {\n    this.service.getThreeRandomTodos()\n      .subscribe(todos => {\n        todos.forEach(todo => {\n          this.service.add(todo)\n            .toPromise();\n        })\n      });\n  }\n\n}\n","<section>\n  <button (click)=\"getThreeRandom()\" mat-button>\n    Estou sem tarefas\n  </button>\n  <mat-icon matTooltip=\"Clique para gerar 3 tarefas aleatórias\">info</mat-icon>\n</section>","import { AfterViewInit, Component, OnInit } from '@angular/core';\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\n\n@Component({\n  selector: 'dark-mode',\n  templateUrl: './dark-mode.component.html',\n  styleUrls: ['./dark-mode.component.scss']\n})\nexport class DarkModeComponent implements OnInit, AfterViewInit {\n  isDarkMode = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    const userPrefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n\n    if (userPrefersDark) {\n      this.isDarkMode = true;\n      document.querySelector('[main-id]')\n        .id = 'mat-app-dark-background';\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.isDarkMode ?\n      document.getElementById('mat-slide-input').click() :\n      '';\n\n  }\n\n  onChange(e: MatSlideToggleChange): void {\n    const body = document.querySelector('[main-id]');\n\n    if (e.checked) {\n      body.id = 'mat-app-dark-background';\n      this.isDarkMode = true;\n    } else {\n      body.id = '';\n      this.isDarkMode = false;\n    }\n  }\n\n}\n","<section>\r\n  <mat-icon>dark_mode</mat-icon>\r\n  <mat-slide-toggle\r\n    [matTooltip]=\"isDarkMode ? 'Clique aqui para desabilitar o modo noturno.' : 'Clique aqui para habilitar o modo noturno.'\"\r\n    id=\"mat-slide\" (change)=\"onChange($event)\"></mat-slide-toggle>\r\n</section>","import { actions } from '../todo-list/todo-list.action';\r\nimport { Todo } from '../../interfaces/todo.interface';\r\nimport { tassign } from 'tassign';\r\nimport { convertArrayToObject } from 'src/app/util/convertArrayToObject';\r\n\r\nexport interface ITodoState {\r\n  todos: { [id: string]: Todo };\r\n}\r\n\r\nexport const TODO_INITIAL_STATE: ITodoState = {\r\n  todos: {}\r\n};\r\n\r\nfunction loadTodos(state: ITodoState, action: { type: string, body: Todo[] }): ITodoState {\r\n  const todosObj = convertArrayToObject(action.body);\r\n\r\n  return tassign(state, {\r\n    todos: {\r\n      ...state.todos,\r\n      ...todosObj\r\n    }\r\n  });\r\n}\r\n\r\nfunction addTodo(state: ITodoState, action: { type: string, body: Todo }): ITodoState {\r\n  return tassign(state, {\r\n    todos: {\r\n      ...state.todos,\r\n      [action.body.id]: action.body\r\n    }\r\n  });\r\n}\r\n\r\nfunction updateTodo(state: ITodoState, action: { type: string, body: Todo }): ITodoState {\r\n  return tassign(state, {\r\n    todos: {\r\n      ...state.todos,\r\n      [state.todos[action.body.id].id]: {\r\n        ...state.todos[action.body.id],\r\n        ...action.body\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport function todoReducer(\r\n  state: ITodoState = TODO_INITIAL_STATE,\r\n  action: { type: string, body: any }): ITodoState {\r\n  switch (action.type) {\r\n    case actions.LOAD_TODOS: return loadTodos(state, action);\r\n\r\n    case actions.ADD_TODO: return addTodo(state, action);\r\n\r\n    case actions.UPDATE_TODO: return updateTodo(state, action);\r\n\r\n    default: return state;\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { TodoService } from './services/todo.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  subscriptions: Subscription[] = [];\n\n  constructor(private todoService: TodoService) { }\n\n  ngOnInit(): void {\n    const todoSubs =\n      this.todoService.getAll()\n        .subscribe();\n\n    this.subscriptions.push(todoSubs);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(subscription => {\n      subscription.unsubscribe();\n    });\n  }\n\n}\n","<navbar></navbar>\r\n<todo-list></todo-list>","import { isDevMode, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { ReactiveFormsModule } from '@angular/forms';\n\n// Material\nimport { matModules } from './ext_modules/extmodules';\n\n// Redux\nimport { NgRedux, NgReduxModule } from '@angular-redux/store';\nimport { IAppState, INITIAL_STATE, rootReducer } from './stores/store';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\n\n// Components\nimport { AppComponent } from './app.component';\nimport { components } from './components/components';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ...components\n  ],\n  imports: [\n    ...matModules,\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    NgReduxModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n  constructor(ngRedux: NgRedux<IAppState>) {\n    // Enable redux-dev-tools if isDevMode()\n    const enhancer = isDevMode() ? [devToolsEnhancer({})] : [];\n    // Init redux\n    ngRedux.configureStore(rootReducer, INITIAL_STATE, [], enhancer);\n  }\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SupervisorCheckService } from 'src/app/services/supervisor-check.service';\nimport { CustomValidator } from '../../../../util/validators/Validator';\n\n@Component({\n  selector: 'validate-supervisor-password',\n  templateUrl: './validate-supervisor-password.component.html',\n  styleUrls: ['./validate-supervisor-password.component.scss']\n})\nexport class ValidateSupervisorPasswordComponent implements OnInit {\n\n  inputIsVisible = false;\n  passwordForm = this.fb.group({\n    password: ['']\n  });\n  passwordChecked = false;\n  passwordIsValid = false;\n\n  constructor(\n    private dialogRef: MatDialogRef<ValidateSupervisorPasswordComponent>,\n    private fb: FormBuilder,\n    private supervisorService: SupervisorCheckService,\n    @Inject(MAT_DIALOG_DATA) public data: { option: string, times: number }\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  validatePassword(): void {\n    this.passwordChecked = true;\n    if (\n      this.supervisorService.validate(\n        this.passwordForm.get('password').value\n      )\n    ) {\n      this.passwordIsValid = true;\n      this.dialogRef.close(this.passwordIsValid);\n    }\n  }\n\n  toggleInputVisibility(passwordInputEl: HTMLInputElement): void {\n    this.inputIsVisible = !this.inputIsVisible;\n\n    this.inputIsVisible ?\n      passwordInputEl.type = 'text' :\n      passwordInputEl.type = 'password';\n  }\n\n  getAvailableActionNumber(): number {\n    if (this.data.option === 'pendente') {\n      if (this.data.times === 1) {\n        return 2;\n      } else if (this.data.times === 2) {\n        return 1;\n      }\n    }\n\n    if (this.data.option === 'editável') {\n      if (this.data.times === 0) {\n        return 2;\n      } else if (this.data.times === 1) {\n        return 1;\n      }\n    }\n  }\n\n}\n","<h1 mat-dialog-title>Para mudar o status da tarefa para {{ data.option.toUpperCase() }}, favor inserir senha de\n  supervisor.\n</h1>\n<small>Favor notar que você só pode efetuar essa operação mais {{ getAvailableActionNumber() }} {{\n  getAvailableActionNumber() === 1 ? 'vez' :\n  'vezes'\n  }}.</small>\n<div mat-dialog-content>\n  <form [formGroup]=\"passwordForm\" (ngSubmit)=\"validatePassword()\">\n    <mat-form-field>\n      <mat-label>Senha</mat-label>\n      <input type=\"password\" matInput #password formControlName=\"password\" required>\n      <span matSuffix>\n        <button mat-button (click)=\"toggleInputVisibility(password)\">\n          <mat-icon *ngIf=\"!inputIsVisible\">visibility_off</mat-icon>\n          <mat-icon *ngIf=\"inputIsVisible\">visibility</mat-icon>\n        </button>\n      </span>\n    </mat-form-field>\n    <div *ngIf=\"!passwordForm.controls.password.pristine && !passwordIsValid && passwordChecked\">\n      <mat-error>\n        <mat-icon>warning</mat-icon> Senha inválida!\n      </mat-error>\n    </div>\n    <div mat-dialog-actions>\n      <button color=\"primary\" mat-button type=\"submit\" [disabled]=\"passwordForm.invalid\">Enviar</button>\n    </div>\n  </form>\n</div>","\r\nexport enum actions {\r\n  ADD_TODO = 'ADD TODO',\r\n  UPDATE_TODO = 'UPDATE TODO',\r\n  LOAD_TODOS = 'LOAD TODOS',\r\n  TOGGLE_TODO = 'TOGGLE TODO',\r\n  MARK_TODO_AS_DONE = 'MARK TODO AS DONE'\r\n};\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n  <section class=\"left\">\n    <mat-icon>api</mat-icon>\n    <h1>Todo List</h1>\n  </section>\n  <section class=\"right\">\n    <dark-mode></dark-mode>\n  </section>\n</mat-toolbar>","import { ITodoState, todoReducer, TODO_INITIAL_STATE } from './todo-list/todo-list.store';\r\nimport { combineReducers } from 'redux';\r\n\r\nexport interface IAppState {\r\n  todoState: ITodoState;\r\n}\r\n\r\nexport const INITIAL_STATE: IAppState = {\r\n  todoState: TODO_INITIAL_STATE\r\n};\r\n\r\nexport const rootReducer = combineReducers({\r\n  todoState: todoReducer,\r\n});\r\n","import { NgRedux } from '@angular-redux/store';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { HttpInterfaceWithRedux } from '../interfaces/http.interface';\nimport { Todo } from '../interfaces/todo.interface';\nimport { IAppState } from '../stores/store';\n\nimport { actions } from '../stores/todo-list/todo-list.action';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService implements HttpInterfaceWithRedux<Todo> {\n  private url = 'http://localhost:3000/todos/';\n\n  constructor(\n    private redux: NgRedux<IAppState>,\n    private http: HttpClient) { }\n\n  getAll(): Observable<void> {\n    return this.http.get(this.url)\n      .pipe(\n        map(res => {\n          const todos = res;\n          this.redux.dispatch({\n            type: actions.LOAD_TODOS, body: todos\n          });\n        }));\n  }\n  get(id: string): void {\n    throw new Error('Method not implemented.');\n  }\n  add(t: Todo): Observable<void> {\n    return this.http.post(this.url + 'add', t)\n      .pipe(\n        map(res => {\n          const todo = res;\n\n          this.redux.dispatch({\n            type: actions.ADD_TODO,\n            body: todo\n          });\n        }\n        ));\n  }\n  update(t: Todo): Observable<void> {\n    return this.http.put(this.url + t.id, t)\n      .pipe(\n        map(_ => {\n          this.redux.dispatch({\n            type: actions.UPDATE_TODO,\n            body: t\n          });\n        }));\n  }\n  remove(id: string): void {\n    throw new Error('Method not implemented.');\n  }\n\n  getThreeRandomTodos(): Observable<Todo[]> {\n    // Returning service unavailable\n    const url = 'https://cat-fact.herokuapp.com/facts/random?animal_type=dog&amount=3';\n    return this.http.get(url)\n      .pipe(\n        map(\n          (randomFactArr:\n            { _id: string, __v: number, text: string, updatedAt: Date, deleted: boolean, source: string, sentCount: number }[]\n          ) => {\n            const todos: Todo[] = [];\n\n            randomFactArr.forEach(randomFact => {\n              todos.push({\n                content: randomFact.text,\n                createdByEmail: 'eu@me.com',\n                createdByName: 'Eu',\n                isCompleted: false,\n                isPinned: false,\n                timesCompleted: 0,\n                timesEdited: 0\n              });\n            });\n\n            return todos;\n          }\n        )\n      );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}